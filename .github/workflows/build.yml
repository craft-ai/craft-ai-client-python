name: test python client
on: [push]
jobs:
  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.8]
        poetry-version: [1.1.4]
        use_pandas: [true, false]
        exclude:
          - python-version: 3.6
            use_pandas: true
        include:
          # Define a build_id for each matrix config
          - python-version: 3.8
            use_pandas: false
            build_id: ${{ github.run_number }}0
          - python-version: 3.8
            use_pandas: true
            build_id: ${{ github.run_number }}1
          - python-version: 3.6
            use_pandas: false
            build_id: ${{ github.run_number }}2
    steps:
      # Preparing test/build environment 
      - name: Checkout scm
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      # Installing dependencies
      - name: Install dependencies without pandas
        if: ${{ matrix.use_pandas == false }}
        run: poetry install
      - name: Install dependencies with Pandas
        if: ${{ matrix.use_pandas == true }}
        run: poetry install -E pandas
      # run tests
      - name: Run lint
        run: poetry run task lint
      - name: Run tests
        env: 
          CRAFT_TOKEN: ${{ secrets.STANLEY_CRAFT_AI_BETA_TOKEN }}
          JOB_ID: ${{ matrix.build_id }}
        run: poetry run pytest --durations=10 tests/*.py
      # if tagged, build and publish
      - name: Build and publish package
        #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: poetry publish --build --password ${{ secrets.PYPI_CRAFT_AI_TOKEN }} --username ${{ secrets.PYPI_CRAFT_AI_USER }} --dry-run
